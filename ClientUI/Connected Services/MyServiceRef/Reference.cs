//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientUI.MyServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/ClientManagementServiceRTT.Models")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.MyServiceRef.Address[] AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.MyServiceRef.Contact[] ContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.MyServiceRef.Address[] Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.MyServiceRef.Contact[] Contacts {
            get {
                return this.ContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactsField, value) != true)) {
                    this.ContactsField = value;
                    this.RaisePropertyChanged("Contacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/ClientManagementServiceRTT.Models")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((this.AddressIdField.Equals(value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine {
            get {
                return this.AddressLineField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLineField, value) != true)) {
                    this.AddressLineField = value;
                    this.RaisePropertyChanged("AddressLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeField, value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/ClientManagementServiceRTT.Models")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactType {
            get {
                return this.ContactTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTypeField, value) != true)) {
                    this.ContactTypeField = value;
                    this.RaisePropertyChanged("ContactType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactValue {
            get {
                return this.ContactValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactValueField, value) != true)) {
                    this.ContactValueField = value;
                    this.RaisePropertyChanged("ContactValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyServiceRef.IClientService")]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddClient", ReplyAction="http://tempuri.org/IClientService/AddClientResponse")]
        int AddClient(string name, string gender, string details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddClient", ReplyAction="http://tempuri.org/IClientService/AddClientResponse")]
        System.Threading.Tasks.Task<int> AddClientAsync(string name, string gender, string details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddAddress", ReplyAction="http://tempuri.org/IClientService/AddAddressResponse")]
        void AddAddress(int clientId, string addressType, string addressLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddAddress", ReplyAction="http://tempuri.org/IClientService/AddAddressResponse")]
        System.Threading.Tasks.Task AddAddressAsync(int clientId, string addressType, string addressLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddContact", ReplyAction="http://tempuri.org/IClientService/AddContactResponse")]
        void AddContact(int clientId, string contactType, string contactValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddContact", ReplyAction="http://tempuri.org/IClientService/AddContactResponse")]
        System.Threading.Tasks.Task AddContactAsync(int clientId, string contactType, string contactValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClient", ReplyAction="http://tempuri.org/IClientService/GetClientResponse")]
        ClientUI.MyServiceRef.Client GetClient(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClient", ReplyAction="http://tempuri.org/IClientService/GetClientResponse")]
        System.Threading.Tasks.Task<ClientUI.MyServiceRef.Client> GetClientAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllClients", ReplyAction="http://tempuri.org/IClientService/GetAllClientsResponse")]
        ClientUI.MyServiceRef.Client[] GetAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllClients", ReplyAction="http://tempuri.org/IClientService/GetAllClientsResponse")]
        System.Threading.Tasks.Task<ClientUI.MyServiceRef.Client[]> GetAllClientsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : ClientUI.MyServiceRef.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<ClientUI.MyServiceRef.IClientService>, ClientUI.MyServiceRef.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddClient(string name, string gender, string details) {
            return base.Channel.AddClient(name, gender, details);
        }
        
        public System.Threading.Tasks.Task<int> AddClientAsync(string name, string gender, string details) {
            return base.Channel.AddClientAsync(name, gender, details);
        }
        
        public void AddAddress(int clientId, string addressType, string addressLine) {
            base.Channel.AddAddress(clientId, addressType, addressLine);
        }
        
        public System.Threading.Tasks.Task AddAddressAsync(int clientId, string addressType, string addressLine) {
            return base.Channel.AddAddressAsync(clientId, addressType, addressLine);
        }
        
        public void AddContact(int clientId, string contactType, string contactValue) {
            base.Channel.AddContact(clientId, contactType, contactValue);
        }
        
        public System.Threading.Tasks.Task AddContactAsync(int clientId, string contactType, string contactValue) {
            return base.Channel.AddContactAsync(clientId, contactType, contactValue);
        }
        
        public ClientUI.MyServiceRef.Client GetClient(int clientId) {
            return base.Channel.GetClient(clientId);
        }
        
        public System.Threading.Tasks.Task<ClientUI.MyServiceRef.Client> GetClientAsync(int clientId) {
            return base.Channel.GetClientAsync(clientId);
        }
        
        public ClientUI.MyServiceRef.Client[] GetAllClients() {
            return base.Channel.GetAllClients();
        }
        
        public System.Threading.Tasks.Task<ClientUI.MyServiceRef.Client[]> GetAllClientsAsync() {
            return base.Channel.GetAllClientsAsync();
        }
    }
}
